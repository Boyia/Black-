name: Docker Image CI

on:
  
  #trigger event
  #when push to main branch
  push:
    branches: [ "main" ]
    tags: [v*]
  # when have an opened PR on main branch
  pull_request:
    branches: [ "main" ]
    types: [opened ]

#workflow jobs
jobs:
  build:

    runs-on: ubuntu-latest
    
    #each step to do
    steps:
    # commit_id with 8 digit as the tag variable for docker image
    - name: Add SHORT_SHA env property with commit short sha
      id: commitid
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_OUTPUT

    #checkout code
    - name: Checkout
      uses: actions/checkout@v4
    
    #for multiple platforms
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3    

    # login to own dockerhub 
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        # GitHub Repo->Settings->Secrets then add username and password
        # it should be the same with name here 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build docker image manually
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/pg:prod_${{ steps.commitid.outputs.SHORT_SHA }} 

    - if: ${{ github.event_name == 'push' }} 
      name: Push docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pg:prod_${{ steps.commitid.outputs.SHORT_SHA }} 
    #build docker image and push it to the docker hub
  #  - if: ${{ github.event_name == 'push' }} 
  #    uses: docker/build-push-action@v5
  #    name: Build the Docker image and push
  #    with:
  #          # whether need to push
   #         push: true
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pg:prod_${{ steps.commitid.outputs.SHORT_SHA }} 

   # - if: ${{ github.event_name == 'pull_request' }} 
   #   uses: docker/build-push-action@v5
   #   name: Build the Docker image and push pro
   #   with:
    #        # whether need to push
     #       push: true
      #      tags: ${{ secrets.DOCKERHUB_USERNAME }}/pg:edge_${{ steps.commitid.outputs.SHORT_SHA }} 
            

            
